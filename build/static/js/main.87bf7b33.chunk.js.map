{"version":3,"sources":["components/Device.js","components/SearchCity.js","components/ResultFadeIn.js","components/BigLabel.js","components/SmallLabel.js","components/Text.js","components/Result.js","components/NotFound.js","components/Footer.js","components/CurrentTimeClass.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["size","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","SearchBar","styled","form","showResult","SearchInput","input","SearchIcon","span","SearchCity","submit","value","change","onSubmit","type","placeholder","onChange","icon","faSearch","ResultFadeIn","keyframes","BigLabel","h2","color","weight","fontSize","align","firstToUpperCase","SmallLabel","h4","Text","Results","div","LocationWrapper","CurrentWeatherWrapper","WeatherIcon","TemperatureWrapper","Temperature","h3","WeatherDetailsWrapper","WeatherDetail","Result","weather","city","country","date","description","main","temp","sunset","sunrise","humidity","wind","highestTemp","lowestTemp","weatherIcon","faBolt","faCloudRain","faCloudShowersHeavy","faSnowflake","faSun","faCloud","faSmog","className","Math","floor","NotFoundWrapper","NotfoundIcon","NotFoundText","NotFound","faFrown","FooterStyle","Footer","CurrentTimeClass","props","state","time","Date","day","getDate","month","getMonth","year","getFullYear","setInterval","setState","Fragment","this","toLocaleTimeString","React","Component","HeadingHeader","header","Header","href","h1","showLabel","secondary","WeatherWrapper","App","weatherInfo","error","handleInputChange","e","target","handleSearchCity","preventDefault","APIkey","forecast","Promise","all","fetch","then","res1","res2","ok","json","Error","statusText","data1","data2","currentDate","getDay","sys","slice","name","temp_max","temp_min","clouds","speed","list","catch","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.87bf7b33.chunk.js","sourcesContent":["const size = {\n  mobileS: '320px',\n  mobileM: '375px',\n  mobileL: '525px',\n  tablet: '768px',\n  laptop: '1024px',\n  laptopL: '1440px',\n  desktop: '2560px',\n};\n\nconst device = {\n  mobileS: `(min-width: ${size.mobileS})`,\n  mobileM: `(min-width: ${size.mobileM})`,\n  mobileL: `(min-width: ${size.mobileL})`,\n  tablet: `(min-width: ${size.tablet})`,\n  laptop: `(min-width: ${size.laptop})`,\n  laptopL: `(min-width: ${size.laptopL})`,\n  desktop: `(min-width: ${size.desktop})`,\n  desktopL: `(min-width: ${size.desktop})`,\n};\n\nexport default device;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport device from './Device';\n\nconst SearchBar = styled.form`\n  top: ${({ showResult }) => (showResult ? '0%' : '30%')};\n  position: relative;\n  margin: 0 auto;\n  max-width: 500px;\n  transition: 0.8s 0.5s;\n  @media ${device.laptopL} {\n    max-width: 600px;\n  }\n  @media ${device.desktop} {\n    max-width: 700px;\n  }\n`;\n\nconst SearchInput = styled.input`\n  width: 100%;\n  border: none;\n  background-color: #ffffff;\n  font-size: 16px;\n  padding: 10px 15px 10px 40px;\n  color: #c5c5c5;\n  transition: 0.2s;\n  border-radius: 20px;\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n  &:focus {\n    color: #191919;\n    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);\n    outline: none;\n  }\n  @media ${device.tablet} {\n    font-size: 18px;\n  }\n  @media ${device.laptop} {\n    padding: 15px 20px 15px 45px;\n    border-radius: 30px;\n  }\n`;\n\nconst SearchIcon = styled.span`\n  display: block;\n  position: absolute;\n  top: 50%;\n  left: 22px;\n  transform: translate(-50%, -50%);\n  height: 14px;\n  width: 14px;\n  font-size: 14px;\n  color: #c5c5c5;\n  @media ${device.tablet} {\n    height: 15px;\n    width: 15px;\n    font-size: 15px;\n  }\n  @media ${device.laptop} {\n    height: 16px;\n    width: 16px;\n    font-size: 16px;\n  }\n`;\n\nconst SearchCity = ({ submit, value, change, showResult }) => {\n  return (\n    <>\n      <SearchBar showResult={showResult} onSubmit={submit}>\n        <SearchInput type=\"text\" value={value} placeholder=\"Nhập tên thành phố...\" onChange={change} />\n        <SearchIcon>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchIcon>\n      </SearchBar>\n    </>\n  );\n};\n\nSearchCity.propTypes = {\n  submit: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  change: PropTypes.func.isRequired,\n  showResult: PropTypes.bool.isRequired,\n};\n\n\nexport default SearchCity;\n","import { keyframes } from \"styled-components\";\n\nconst ResultFadeIn = keyframes`\n  to {\n    opacity: 1;\n        visibility: visible;\n        top: 0;\n  }\n`;\n\nexport default ResultFadeIn;\n","import styled from 'styled-components';\nimport device from './Device';\n\nconst BigLabel = styled.h2`\n  color: ${({ color }) => color || '#FFFFFF'};\n  display: block;\n  font-weight: ${({ weight }) => weight || '600'};\n  font-size: ${({ fontSize }) => fontSize || '30px'};\n  text-align: ${({ align }) => align || 'left'};\n  padding: 5px 0;\n  ${({ firstToUpperCase }) =>\n    firstToUpperCase &&\n    `\n  &:first-letter {\n    text-transform: uppercase;\n  }\n  `}\n  @media ${device.tablet} {\n    font-size: ${({ fontSize }) => fontSize || '37px'};\n  }\n  @media ${device.laptop} {\n    font-size: ${({ fontSize }) => fontSize || '43px'};\n  } \n  @media ${device.laptopL} {\n    font-size: ${({ fontSize }) => fontSize || '52px'};\n  } \n`;\n\nexport default BigLabel;\n","import styled from 'styled-components';\nimport device from './Device';\n\nconst SmallLabel = styled.h4`\n  color: ${({ color }) => color || '#FFFFFF'};\n  display: block;\n  font-weight: ${({ weight }) => weight || '600'};\n  font-size: ${({ fontSize }) => fontSize || '15px'};\n  text-align: ${({ align }) => align || 'left'};\n  padding: 5px 0;\n  ${({ firstToUpperCase }) =>\n    firstToUpperCase &&\n    `\n  &:first-letter {\n    text-transform: uppercase;\n  }\n  `}\n  @media ${device.tablet} {\n    font-size: ${({ fontSize }) => fontSize || '20px'};\n  }\n  @media ${device.laptop} {\n    font-size: ${({ fontSize }) => fontSize || '23px'};\n  } \n  @media ${device.laptopL} {\n    font-size: ${({ fontSize }) => fontSize || '26px'};\n  }\n`;\n\nexport default SmallLabel;\n","import styled from 'styled-components';\nimport device from './Device';\n\nconst Text = styled.span`\n  color: ${({ color }) => color || '#FFFFFF'};\n  display: block;\n  font-size: ${({ fontSize }) => fontSize || '12px'};\n  text-align: ${({ align }) => align || 'left'};\n\n  ${({ firstToUpperCase }) =>\n    firstToUpperCase &&\n    `\n  &:first-letter {\n    text-transform: uppercase;\n  }\n  `}\n  @media ${device.tablet} {\n    font-size: ${({ fontSize }) => fontSize || '15px'};\n  }\n  @media ${device.laptop} {\n    font-size: ${({ fontSize }) => fontSize || '17px'};\n  } \n  @media ${device.laptopL} {\n    font-size: ${({ fontSize }) => fontSize || '19px'};\n  }\n`;\n\nexport default Text;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faCloud,\n    faBolt,\n    faCloudRain,\n    faCloudShowersHeavy,\n    faSnowflake,\n    faSun,\n    faSmog,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport styled from \"styled-components\";\nimport device from \"./Device\";\nimport ResultFadeIn from \"./ResultFadeIn\";\nimport BigLabel from \"./BigLabel\";\nimport SmallLabel from \"./SmallLabel\";\nimport Text from \"./Text\";\nimport \"animate.css/animate.min.css\";\n\n//Set style for website\nconst Results = styled.div`\n    margin-top: 5%;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    opacity: 0;\n    visibility: hidden;\n    position: relative;\n    top: 20px;\n    animation: ${ResultFadeIn} 0.5s 1.4s forwards;\n`;\n\nconst LocationWrapper = styled.div`\n    flex-basis: 100%;\n    text-align: center;\n`;\n\nconst CurrentWeatherWrapper = styled.div`\n    flex-basis: 100%;\n    display: grid;\n    justify-content: center;\n    align-items: center;\n    grid-template-columns: auto 1fr;\n    margin: 20px 0;\n    grid-gap: 30px;\n    @media ${device.mobileL} {\n        flex-basis: 50%;\n        padding-right: 10px;\n    }\n    @media ${device.tablet} {\n        grid-template-columns: 1fr 1fr;\n        padding-right: 20px;\n    }\n`;\n\nconst WeatherIcon = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 70px;\n    color: #ffffff;\n    @media ${device.tablet} {\n        font-size: 100px;\n        justify-content: flex-end;\n    }\n    @media ${device.laptop} {\n        font-size: 120px;\n    }\n    @media ${device.laptopL} {\n        font-size: 140px;\n    }\n`;\n\nconst TemperatureWrapper = styled.div``;\n\nconst Temperature = styled.h3`\n    display: block;\n    font-size: 50px;\n    font-weight: 400;\n    color: rgba(255, 255, 255, 0.9);\n    @media ${device.tablet} {\n        font-size: 70px;\n    }\n    @media ${device.laptop} {\n        font-size: 90px;\n    }\n    @media ${device.laptopL} {\n        font-size: 110px;\n    }\n`;\n\nconst WeatherDetailsWrapper = styled.div`\n    flex-basis: 100%;\n    display: flex;\n    flex-wrap: wrap;\n    padding: 10px 0;\n    margin: 20px 0;\n    background-color: rgba(0, 0, 0, 0.9);\n    border-radius: 10px;\n    align-self: flex-start;\n    @media ${device.mobileL} {\n        flex-basis: 50%;\n    }\n`;\n\nconst WeatherDetail = styled.div`\n    flex-basis: calc(100% / 3);\n    padding: 10px;\n    @media ${device.laptop} {\n        padding: 20px 10px;\n    }\n`;\n\nconst Result = ({ weather }) => {\n    const {\n        city,\n        country,\n        date,\n        description,\n        main,\n        temp,\n        sunset,\n        sunrise,\n        humidity,\n        wind,\n        highestTemp,\n        lowestTemp,\n    } = weather;\n\n\n    //Set weather icon in main\n    let weatherIcon = null;\n    switch (main) {\n        case \"Thunderstorm\":\n            weatherIcon = <FontAwesomeIcon icon={faBolt} />;\n            break;\n        case \"Drizzle\":\n            weatherIcon = <FontAwesomeIcon icon={faCloudRain} />;\n            break;\n        case \"Rain\":\n            weatherIcon = <FontAwesomeIcon icon={faCloudShowersHeavy} />;\n            break;\n        case \"Snow\":\n            weatherIcon = <FontAwesomeIcon icon={faSnowflake} />;\n            break;\n        case \"Clear\":\n            weatherIcon = <FontAwesomeIcon icon={faSun} />;\n            break;\n        case \"Clouds\":\n            weatherIcon = <FontAwesomeIcon icon={faCloud} />;\n            break;\n        default:\n            weatherIcon = <FontAwesomeIcon icon={faSmog} />;\n    }\n\n    return (\n        <Results>\n            <LocationWrapper>\n                <BigLabel className=\"text-center\">\n                {city}, {country}\n                </BigLabel>\n                <SmallLabel weight=\"400\" className=\"text-center\">\n                    {date}\n                </SmallLabel>\n            </LocationWrapper>\n            <CurrentWeatherWrapper>\n                <WeatherIcon>{weatherIcon}</WeatherIcon>\n                <TemperatureWrapper>\n                    <Temperature>{Math.floor(temp - 273.15)}&#176;</Temperature>\n                    <SmallLabel weight=\"400\" firstToUpperCase>\n                        {description}\n                    </SmallLabel>\n                </TemperatureWrapper>\n            </CurrentWeatherWrapper>\n            <WeatherDetailsWrapper>\n                <WeatherDetail>\n                    <SmallLabel align=\"center\" weight=\"400\">\n                        {Math.floor(highestTemp - 273.15)}&#176;\n                    </SmallLabel>\n                    <Text align=\"center\">Cao nhất</Text>\n                </WeatherDetail>\n                <WeatherDetail>\n                    <SmallLabel align=\"center\" weight=\"400\">\n                        {wind}mph\n                    </SmallLabel>\n                    <Text align=\"center\">Gió</Text>\n                </WeatherDetail>\n                <WeatherDetail>\n                    <SmallLabel align=\"center\" weight=\"400\">\n                        {sunrise}\n                    </SmallLabel>\n                    <Text align=\"center\">MT mọc</Text>\n                </WeatherDetail>\n                <WeatherDetail>\n                    <SmallLabel align=\"center\" weight=\"400\">\n                        {Math.floor(lowestTemp - 273.15)}&#176;\n                    </SmallLabel>\n                    <Text align=\"center\">Thấp nhất</Text>\n                </WeatherDetail>\n                <WeatherDetail>\n                    <SmallLabel align=\"center\" weight=\"400\">\n                        {humidity}%\n                    </SmallLabel>\n                    <Text align=\"center\">Mưa</Text>\n                </WeatherDetail>\n                <WeatherDetail>\n                    <SmallLabel align=\"center\" weight=\"400\">\n                        {sunset}\n                    </SmallLabel>\n                    <Text align=\"center\">MT lặn</Text>\n                </WeatherDetail>\n            </WeatherDetailsWrapper>\n        </Results>\n    );\n};\n\nResult.propTypes = {\n    weather: PropTypes.shape({\n        city: PropTypes.string,\n        country: PropTypes.string,\n        date: PropTypes.string,\n        description: PropTypes.string,\n        main: PropTypes.string,\n        temp: PropTypes.number,\n        sunrise: PropTypes.string,\n        sunset: PropTypes.string,\n        humidity: PropTypes.number,\n        wind: PropTypes.number,\n        highestTemp: PropTypes.number,\n        lowestTemp: PropTypes.number,\n        forecast: PropTypes.array,\n    }).isRequired,\n};\n\nexport default Result;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFrown } from '@fortawesome/free-solid-svg-icons';\nimport styled from 'styled-components';\nimport ResultFadeIn from './ResultFadeIn';\n\nconst NotFoundWrapper = styled.div`\n  max-width: 600px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 100px auto 0;\n  padding: 20px;\n  opacity: 0;\n  visibility: hidden;\n  position: relative;\n  border-radius: 10px;\n  top: 20px;\n  background-color: rgba(255, 255, 255, 0.3);\n  border-radius: 10px;\n  animation: ${ResultFadeIn} 0.5s 1.4s forwards;\n`;\n\nconst NotfoundIcon = styled.span`\n  display: block;\n  text-align: center;\n  color: #ffffff;\n  font-size: 40px;\n  margin-right: 10px;\n`;\n\nconst NotFoundText = styled.span`\n  color: #ffffff;\n  font-size: 17px;\n`;\n\nconst NotFound = () => {\n  return (\n    <NotFoundWrapper>\n      <NotfoundIcon>\n        <FontAwesomeIcon icon={faFrown} />\n      </NotfoundIcon>\n      <NotFoundText>Sorry, the specified city was not found..</NotFoundText>\n    </NotFoundWrapper>\n  );\n};\n\nexport default NotFound;\n","import React from 'react'\r\nimport styled from 'styled-components';\r\nconst FooterStyle = styled.div`\r\n    text-align:center;\r\n    position:relative;\r\n    bottom:0;\r\n    color:white;\r\n    padding:10px;\r\n    p{\r\n        margin:0;\r\n    }\r\n`;\r\nconst Footer = () => {\r\n    return (\r\n        <>\r\n            <FooterStyle>\r\n                <p>Nhóm B</p>\r\n                <p>Demo ReactJS</p>\r\n            </FooterStyle>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\n\r\nclass CurrentTimeClass extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      time: new Date(),\r\n      day: new Date().getDate(),\r\n      month: new Date().getMonth() + 1,\r\n      year: new Date().getFullYear(),\r\n    };\r\n    setInterval(() => {\r\n      this.setState({ ...this.state, time: new Date() });\r\n      this.setState({ ...this.state, day: new Date().getDate() });\r\n      this.setState({ ...this.state, month: new Date().getMonth() + 1 });\r\n      this.setState({ ...this.state, year: new Date().getFullYear() });\r\n    }, 1000);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <p>{this.state.time.toLocaleTimeString()}, ngày {this.state.day}, tháng {this.state.month}, năm {this.state.year}</p>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CurrentTimeClass;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport CurrentTimeClass from './CurrentTimeClass'\r\nconst HeadingHeader = styled.header`\r\n\ttext-align:center;\r\n\tpadding:10px 0px;\r\n\tcolor:white;\r\n\ta{\r\n\t\ttext-transform:uppercase;\r\n\t\tfont-size:30px;\r\n\t\tcolor:green;\r\n\t\ttext-decoration:none;\r\n\t}\r\n\t#current-time{\r\n\t\tfont-size:32px;\r\n\t\tcolor:white;\r\n\t\ttext-transform:uppercase;\r\n\t}\r\n`;\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<HeadingHeader>\r\n\t\t\t\t<a href=\"/\">Demo ReactJS</a>\r\n\t\t\t\t<CurrentTimeClass/>\r\n\t\t\t</HeadingHeader>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Header;","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport styled from \"styled-components\";\nimport SearchCity from \"./components/SearchCity\";\nimport device from \"./components/Device\";\nimport Result from \"./components/Result\";\nimport NotFound from \"./components/NotFound\";\nimport \"animate.css/animate.min.css\";\nimport Footer from \"./components/Footer\";\nimport Header from './components/Header';\nconst AppTitle = styled.h1`\n    display: block;\n    height: 64px;\n    margin: 0;\n    padding: 20px 0;\n    font-size: 20px;\n    text-transform: uppercase;\n    font-weight: 400;\n    color: #ffffff;\n    transition: 0.3s 1.4s;\n    opacity: ${({ showLabel }) => (showLabel ? 1 : 0)};\n\n    ${({ secondary }) =>\n        secondary &&\n        `\n    opacity: 1;\n    height: auto;\n    position: relative;\n    padding: 20px 0;\n    font-size: 30px;\n    top: 20%;\n    text-align: center;\n    transition: .5s;\n    @media ${device.tablet} {\n      font-size: 40px;\n    }\n    @media ${device.laptop} {\n      font-size: 50px;\n    }\n    @media ${device.laptopL} {\n      font-size: 60px;\n    }\n    @media ${device.desktop} {\n      font-size: 70px;\n    }\n    \n  `}\n\n    ${({ showResult }) =>\n        showResult &&\n        `\n    opacity: 0;\n    visibility: hidden;\n    top: 10%;\n  `}\n`;\n\nconst WeatherWrapper = styled.div`\n    max-width: 1500px;\n    margin: 0 auto;\n    height: calc(100vh - 64px);\n    width: 100%;\n    position: relative;\n`;\n\nexport default class App extends React.Component {\n    state = {\n        value: \"\",\n        weatherInfo: null,\n        error: false,\n    };\n\n    handleInputChange = (e) => {\n        this.setState({\n            value: e.target.value,\n        });\n    };\n\n    handleSearchCity = (e) => {\n        e.preventDefault();\n        const { value } = this.state;\n        const APIkey = \"4ab4acb103ca20bdcb9c98bb8cc7daa9\";\n\n        const weather = `https://api.openweathermap.org/data/2.5/weather?q=${value}&APPID=${APIkey}`;\n        const forecast = `https://api.openweathermap.org/data/2.5/forecast?q=${value}&APPID=${APIkey}`;\n\n        Promise.all([fetch(weather), fetch(forecast)])\n            .then(([res1, res2]) => {\n                if (res1.ok && res2.ok) {\n                    return Promise.all([res1.json(), res2.json()]);\n                }\n                throw Error(res1.statusText, res2.statusText);\n            })\n            .then(([data1, data2]) => {\n                const months = [\n                    \"Tháng 1\",\n                    \"Tháng 2\",\n                    \"Tháng 3\",\n                    \"Tháng 4\",\n                    \"Tháng 5\",\n                    \"Tháng 6\",\n                    \"Tháng 7\",\n                    \"Tháng 8\",\n                    \"Tháng 9\",\n                    \"Tháng 10\",\n                    \"Tháng 11\",\n                    \"Tháng 12\",\n                ];\n                const days = [\n                    \"Chủ nhật\",\n                    \"Thứ hai\",\n                    \"Thứ ba\",\n                    \"Thứ tư\",\n                    \"Thứ 5\",\n                    \"Thứ 6\",\n                    \"Thứ 7\",\n                ];\n                const currentDate = new Date();\n                const date = `${\n                    days[currentDate.getDay()]\n                }, Ngày ${currentDate.getDate()}, ${\n                    months[currentDate.getMonth()]\n                }, Năm ${currentDate.getFullYear()}`;\n                const sunset = new Date(data1.sys.sunset * 1000)\n                    .toLocaleTimeString()\n                    .slice(0, 4);\n                const sunrise = new Date(data1.sys.sunrise * 1000)\n                    .toLocaleTimeString()\n                    .slice(0, 4);\n\n                const weatherInfo = {\n                    city: data1.name,\n                    country: data1.sys.country,\n                    date,\n                    description: data1.weather[0].description,\n                    main: data1.weather[0].main,\n                    temp: data1.main.temp,\n                    highestTemp: data1.main.temp_max,\n                    lowestTemp: data1.main.temp_min,\n                    sunrise,\n                    sunset,\n                    clouds: data1.clouds.all,\n                    humidity: data1.main.humidity,\n                    wind: data1.wind.speed,\n                    forecast: data2.list,\n                };\n                this.setState({\n                    weatherInfo,\n                    error: false,\n                });\n            })\n            .catch((error) => {\n                this.setState({\n                    error: true,\n                    weatherInfo: null,\n                });\n            });\n    };\n\n    render() {\n        const { value, weatherInfo, error } = this.state;\n        return (\n            <>\n                <WeatherWrapper>\n                    <div className=\"container\">\n                        <Header />\n                        <SearchCity\n                            value={value}\n                            showResult={(weatherInfo || error) && true}\n                            change={this.handleInputChange}\n                            submit={this.handleSearchCity}\n                        />\n                        {weatherInfo && <Result weather={weatherInfo} />}\n                        {error && <NotFound error={error} />}\n                        <Footer />\n                    </div>\n                </WeatherWrapper>\n            </>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/styles.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}